// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RunpodInfra.Runpod
{
    [RunpodResourceType("runpod:index:Pod")]
    public partial class Pod : global::Pulumi.CustomResource
    {
        [Output("aiApiId")]
        public Output<string?> AiApiId { get; private set; } = null!;

        [Output("cloudType")]
        public Output<string?> CloudType { get; private set; } = null!;

        [Output("containerDiskInGb")]
        public Output<int?> ContainerDiskInGb { get; private set; } = null!;

        [Output("countryCode")]
        public Output<string?> CountryCode { get; private set; } = null!;

        [Output("cudaVersion")]
        public Output<string?> CudaVersion { get; private set; } = null!;

        [Output("dataCenterId")]
        public Output<string?> DataCenterId { get; private set; } = null!;

        [Output("deployCost")]
        public Output<double?> DeployCost { get; private set; } = null!;

        [Output("dockerArgs")]
        public Output<string?> DockerArgs { get; private set; } = null!;

        [Output("env")]
        public Output<ImmutableArray<Outputs.PodEnv>> Env { get; private set; } = null!;

        [Output("gpuCount")]
        public Output<int> GpuCount { get; private set; } = null!;

        [Output("gpuTypeId")]
        public Output<string> GpuTypeId { get; private set; } = null!;

        [Output("gpuTypeIdList")]
        public Output<ImmutableArray<string>> GpuTypeIdList { get; private set; } = null!;

        [Output("imageName")]
        public Output<string> ImageName { get; private set; } = null!;

        [Output("minDisk")]
        public Output<int?> MinDisk { get; private set; } = null!;

        [Output("minDownload")]
        public Output<int?> MinDownload { get; private set; } = null!;

        [Output("minMemoryInGb")]
        public Output<int?> MinMemoryInGb { get; private set; } = null!;

        [Output("minUpload")]
        public Output<int?> MinUpload { get; private set; } = null!;

        [Output("minVcpuCount")]
        public Output<int?> MinVcpuCount { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("networkVolumeId")]
        public Output<string?> NetworkVolumeId { get; private set; } = null!;

        [Output("pod")]
        public Output<Outputs.Pod> Pod { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("ports")]
        public Output<string?> Ports { get; private set; } = null!;

        [Output("savingsPlan")]
        public Output<Outputs.SavingsPlanInput?> SavingsPlan { get; private set; } = null!;

        [Output("startJupyter")]
        public Output<bool?> StartJupyter { get; private set; } = null!;

        [Output("startSsh")]
        public Output<bool?> StartSsh { get; private set; } = null!;

        [Output("stopAfter")]
        public Output<string?> StopAfter { get; private set; } = null!;

        [Output("supportPublicIp")]
        public Output<bool?> SupportPublicIp { get; private set; } = null!;

        [Output("templateId")]
        public Output<string?> TemplateId { get; private set; } = null!;

        [Output("terminateAfter")]
        public Output<string?> TerminateAfter { get; private set; } = null!;

        [Output("volumeInGb")]
        public Output<int?> VolumeInGb { get; private set; } = null!;

        [Output("volumeKey")]
        public Output<string?> VolumeKey { get; private set; } = null!;

        [Output("volumeMountPath")]
        public Output<string?> VolumeMountPath { get; private set; } = null!;


        /// <summary>
        /// Create a Pod resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pod(string name, PodArgs args, CustomResourceOptions? options = null)
            : base("runpod:index:Pod", name, args ?? new PodArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pod(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("runpod:index:Pod", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/runpod/pulumi-runpod-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pod resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pod Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Pod(name, id, options);
        }
    }

    public sealed class PodArgs : global::Pulumi.ResourceArgs
    {
        [Input("aiApiId")]
        public Input<string>? AiApiId { get; set; }

        [Input("cloudType")]
        public Input<string>? CloudType { get; set; }

        [Input("containerDiskInGb")]
        public Input<int>? ContainerDiskInGb { get; set; }

        [Input("countryCode")]
        public Input<string>? CountryCode { get; set; }

        [Input("cudaVersion")]
        public Input<string>? CudaVersion { get; set; }

        [Input("dataCenterId")]
        public Input<string>? DataCenterId { get; set; }

        [Input("deployCost")]
        public Input<double>? DeployCost { get; set; }

        [Input("dockerArgs")]
        public Input<string>? DockerArgs { get; set; }

        [Input("env")]
        private InputList<Inputs.PodEnvArgs>? _env;
        public InputList<Inputs.PodEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Inputs.PodEnvArgs>());
            set => _env = value;
        }

        [Input("gpuCount", required: true)]
        public Input<int> GpuCount { get; set; } = null!;

        [Input("gpuTypeId", required: true)]
        public Input<string> GpuTypeId { get; set; } = null!;

        [Input("gpuTypeIdList")]
        private InputList<string>? _gpuTypeIdList;
        public InputList<string> GpuTypeIdList
        {
            get => _gpuTypeIdList ?? (_gpuTypeIdList = new InputList<string>());
            set => _gpuTypeIdList = value;
        }

        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        [Input("minDisk")]
        public Input<int>? MinDisk { get; set; }

        [Input("minDownload")]
        public Input<int>? MinDownload { get; set; }

        [Input("minMemoryInGb")]
        public Input<int>? MinMemoryInGb { get; set; }

        [Input("minUpload")]
        public Input<int>? MinUpload { get; set; }

        [Input("minVcpuCount")]
        public Input<int>? MinVcpuCount { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkVolumeId")]
        public Input<string>? NetworkVolumeId { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("ports")]
        public Input<string>? Ports { get; set; }

        [Input("savingsPlan")]
        public Input<Inputs.SavingsPlanInputArgs>? SavingsPlan { get; set; }

        [Input("startJupyter")]
        public Input<bool>? StartJupyter { get; set; }

        [Input("startSsh")]
        public Input<bool>? StartSsh { get; set; }

        [Input("stopAfter")]
        public Input<string>? StopAfter { get; set; }

        [Input("supportPublicIp")]
        public Input<bool>? SupportPublicIp { get; set; }

        [Input("templateId")]
        public Input<string>? TemplateId { get; set; }

        [Input("terminateAfter")]
        public Input<string>? TerminateAfter { get; set; }

        [Input("volumeInGb")]
        public Input<int>? VolumeInGb { get; set; }

        [Input("volumeKey")]
        public Input<string>? VolumeKey { get; set; }

        [Input("volumeMountPath")]
        public Input<string>? VolumeMountPath { get; set; }

        public PodArgs()
        {
        }
        public static new PodArgs Empty => new PodArgs();
    }
}
